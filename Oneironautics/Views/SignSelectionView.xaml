<UserControl x:Class="DesktopApp.Views.SignSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:app="clr-namespace:DesktopApp"
             xmlns:local="clr-namespace:DesktopApp.Views"
             xmlns:viewmodels="clr-namespace:DesktopApp.ViewModels" 
             xmlns:models="clr-namespace:DesktopApp.Models"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=viewmodels:DreamEditorViewModel}"
             >
    <UserControl.Resources>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
             StrokeThickness="5"
             Stroke="Black"
             StrokeDashArray="1 2"
             Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Name="Bd"
                              Grid.Column="1"                                
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem 
                    Header="New Sign"
                    Command="{Binding AddNewSign}"
                />
            </ContextMenu>
        </Grid.ContextMenu>

        <TreeView FontSize="16" Name="SignTree" Margin="0 0 0 0">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True" />
                    <Setter Property="Margin" Value="0 2 0 0"/>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeViewItem>
                <TreeViewItem.Header>
                    <TextBlock Text="Awareness"></TextBlock>
                </TreeViewItem.Header>
                <TreeView ItemsSource="{Binding AwarenessSigns}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Margin" Value="0 2 0 0"/>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected}">
                                <CheckBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem 
                                            Header="Edit"
                                            Command="{Binding DataContext.EditSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                        <MenuItem 
                                            Header="Delete"
                                            Command="{Binding DataContext.DeleteSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>        
                                    </ContextMenu>
                                </CheckBox.ContextMenu>

                                <TextBlock Text="{Binding Title}"/>
                            </CheckBox>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </TreeViewItem>

            <TreeViewItem>
                <TreeViewItem.Header>
                    <TextBlock Text="Action"></TextBlock>
                </TreeViewItem.Header>
                <TreeView ItemsSource="{Binding ActionSigns}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Margin" Value="0 2 0 0"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected}">
                                <CheckBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem 
                                            Header="Edit"
                                            Command="{Binding DataContext.EditSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                        <MenuItem 
                                            Header="Delete"
                                            Command="{Binding DataContext.DeleteSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </CheckBox.ContextMenu>

                                <TextBlock Text="{Binding Title}"/>
                            </CheckBox>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </TreeViewItem>

            <TreeViewItem>
                <TreeViewItem.Header>
                    <TextBlock Text="Form"></TextBlock>
                </TreeViewItem.Header>
                <TreeView ItemsSource="{Binding FormSigns}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Margin" Value="0 2 0 0"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected}">
                                <CheckBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem 
                                            Header="Edit"
                                            Command="{Binding DataContext.EditSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                        <MenuItem 
                                            Header="Delete"
                                            Command="{Binding DataContext.DeleteSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </CheckBox.ContextMenu>

                                <TextBlock Text="{Binding Title}"/>
                            </CheckBox>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </TreeViewItem>

            <TreeViewItem>
                <TreeViewItem.Header>
                    <TextBlock Text="Context"></TextBlock>
                </TreeViewItem.Header>
                <TreeView ItemsSource="{Binding ContextSigns}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Margin" Value="0 2 0 0"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected}">
                                <CheckBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem 
                                            Header="Edit"
                                            Command="{Binding DataContext.EditSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                        <MenuItem 
                                            Header="Delete"
                                            Command="{Binding DataContext.DeleteSign, Source={x:Reference SignTree}}"
                                            CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </CheckBox.ContextMenu>

                                <TextBlock Text="{Binding Title}"/>
                            </CheckBox>
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </TreeViewItem>

        </TreeView>
    </Grid>
</UserControl>
